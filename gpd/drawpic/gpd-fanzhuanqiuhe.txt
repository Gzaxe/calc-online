(*图a的裸结果*)
gpda=Import["F:\calc\gpd3d-a-p-xi1.wdx"];
aHdg=Query[1,1]@gpda;
aHer=Query[1,2]@gpda;
aHda=Query[1,3]@gpda;
aEdg=Query[2,1]@gpda;
aEer=Query[2,2]@gpda;
aEda=Query[2,3]@gpda;
aHdgf=Interpolation[Flatten[aHdg,1]];
aHerf=Interpolation[Flatten[aHer,1]];
aHdaf=Interpolation[Flatten[aHda,1]];
aEdgf=Interpolation[Flatten[aEdg,1]];
aEerf=Interpolation[Flatten[aEer,1]];
aEdaf=Interpolation[Flatten[aEda,1]];
(*pi+,只需要乘上系数*)
ap1=(0.76+0.5)^2/(4*(0.093)^2*(2Pi)^4);
ap1Hdg[x_,t_]=ap1*aHdgf[x,t];
ap1Her[x_,t_]=ap1*aHerf[x,t];
ap1Hda[x_,t_]=ap1*aHdaf[x,t];
ap1Edg[x_,t_]=ap1*aEdgf[x,t];
ap1Eer[x_,t_]=ap1*aEerf[x,t];
ap1Eda[x_,t_]=ap1*aEdaf[x,t];
(*pi+的u贡献，分段但就是总的*)
ap1Hdgre[x_,t_]=ap1Hdg[x,t];
ap1Herre[x_,t_]=ap1Hda[x,t]+ap1Her[x,t];
ap1Edgre[x_,t_]=ap1Edg[x,t];
ap1Eerre[x_,t_]=ap1Eda[x,t]+ap1Eer[x,t];

(*pi0,先系数，求和之后整体反转*)
ap0=(0.76+0.5)^2/(8*(0.093)^2*(2Pi)^4);
ap0Hdg[x_,t_]=ap0*aHdgf[x,t];
ap0Her[x_,t_]=ap0*aHerf[x,t];
ap0Hda[x_,t_]=ap0*aHdaf[x,t];
ap0Edg[x_,t_]=ap0*aEdgf[x,t];
ap0Eer[x_,t_]=ap0*aEerf[x,t];
ap0Eda[x_,t_]=ap0*aEdaf[x,t];
(*pi0的u，之后要和反转的求和*)
ap0Hdgre1[x_,t_]=ap0Hdg[x,t];
ap0Herre1[x_,t_]=ap0Hda[x,t]+ap0Her[x,t];
ap0Edgre1[x_,t_]=ap0Edg[x,t];
ap0Eerre1[x_,t_]=ap0Eda[x,t]+ap0Eer[x,t];
(*反转*)
ap0Hdgre0[x_,t_]=-ap0Hdgre1[-x,t];
ap0Herre0[x_,t_]=-ap0Herre1[-x,t];
ap0Edgre0[x_,t_]=-ap0Edgre1[-x,t];
ap0Eerre0[x_,t_]=-ap0Eerre1[-x,t];
(*求和,只有erbl要加起来，以及画图也是分段那其实只要算erbl*)
ap0Herre[x_,t_]=ap0Herre1[x,t]+ap0Herre0[x,t];
ap0Eerre[x_,t_]=ap0Eerre1[x,t]+ap0Eerre0[x,t];
(*图a的总结果，就是对粒子求和*)
aHdgzall[x_,t_]=ap1Hdgre[x,t]+ap0Hdgre1[x,t];
aHdgfall[x_,t_]=ap0Hdgre0[x,t];
aHerall[x_,t_]=ap1Herre[x,t]+ap0Herre[x,t];
aEdgzall[x_,t_]=ap1Edgre[x,t]+ap0Edgre1[x,t];
aEdgfall[x_,t_]=ap0Edgre0[x,t];
aEerall[x_,t_]=ap1Eerre[x,t]+ap0Eerre[x,t];


(*图k,l的裸结果*)
gpdkl=Import["F:\calc\gpd3d-a-p-xi1.wdx"];
kHda=Query[1,3]@gpdkl;
lEda=Query[2,3]@gpdkl;
kHdaf=Interpolation[Flatten[kHda,1]];
lEdaf=Interpolation[Flatten[lEda,1]];
(*k,l的系数*)
kp=1/(4*2*(0.093)^2*(2Pi)^4);
lp=2*(1.24+0.46)/(2*(0.093)^2*(2Pi)^4);
kpHda[x_,t_]=kp*kHdaf[x,t];
lpEda[x_,t_]=lp*lEdaf[x,t];
(*反转对称*)
kpHdabar[x_,t_]=-kpHda[-x,t];
lpEdabar[x_,t_]=-lpEda[-x,t];
(*总结果*)
kpHall[x_,t_]=kpHda[x,t]+kpHdabar[x,t];
lpEall[x_,t_]=lpEda[x,t]+lpEdabar[x,t];



(*图m的裸结果*)
gpdm=Import[""];
mHdg=Query[1,1]@gpdm;
mHer=Query[1,2]@gpdm;
mHda=Query[1,3]@gpdm;
mEdg=Query[2,1]@gpdm;
mEer=Query[2,2]@gpdm;
mEda=Query[2,3]@gpdm;
mHdgf=Interpolation[Flatten[mHdg,1]];
mHerf=Interpolation[Flatten[mHer,1]];
mHdaf=Interpolation[Flatten[mHda,1]];
mEdgf=Interpolation[Flatten[mEdg,1]];
mEerf=Interpolation[Flatten[mEer,1]];
mEdaf=Interpolation[Flatten[mEda,1]];
(*pi+,只需要乘上系数*)
mp1=(-2*0.76)^2/(6*2*(0.093)^2*(2Pi)^4);
mp1Hdg[x_,t_]=mp1*mHdgf[x,t];
mp1Her[x_,t_]=mp1*mHerf[x,t];
mp1Hda[x_,t_]=mp1*mHdaf[x,t];
mp1Edg[x_,t_]=mp1*mEdgf[x,t];
mp1Eer[x_,t_]=mp1*mEerf[x,t];
mp1Eda[x_,t_]=mp1*mEdaf[x,t];
(*pi+的u贡献，分段但就是总的*)
mp1Hdgre[x_,t_]=mp1Hdg[x,t];
mp1Herre[x_,t_]=mp1Hda[x,t]+mp1Her[x,t];
mp1Edgre[x_,t_]=mp1Edg[x,t];
mp1Eerre[x_,t_]=mp1Eda[x,t]+mp1Eer[x,t];

(*pi0,先系数，求和之后整体反转*)
mp0=(-2*0.76)^2/(3*2*(0.093)^2*(2Pi)^4);
mp0Hdg[x_,t_]=mp0*mHdgf[x,t];
mp0Her[x_,t_]=mp0*mHerf[x,t];
mp0Hda[x_,t_]=mp0*mHdaf[x,t];
mp0Edg[x_,t_]=mp0*mEdgf[x,t];
mp0Eer[x_,t_]=mp0*mEerf[x,t];
mp0Eda[x_,t_]=mp0*mEdaf[x,t];
(*pi0的u，之后要和反转的求和*)
mp0Hdgre1[x_,t_]=mp0Hdg[x,t];
mp0Herre1[x_,t_]=mp0Hda[x,t]+mp0Her[x,t];
mp0Edgre1[x_,t_]=mp0Edg[x,t];
mp0Eerre1[x_,t_]=mp0Eda[x,t]+mp0Eer[x,t];
(*反转*)
mp0Hdgre0[x_,t_]=-mp0Hdgre1[-x,t];
mp0Herre0[x_,t_]=-mp0Herre1[-x,t];
mp0Edgre0[x_,t_]=-mp0Edgre1[-x,t];
mp0Eerre0[x_,t_]=-mp0Eerre1[-x,t];
(*反转之后求和,只有erbl要加起来，以及画图也是分段那其实只要算erbl*)
ap0Herre[x_,t_]=ap0Herre1[x,t]+ap0Herre0[x,t];
ap0Eerre[x_,t_]=ap0Eerre1[x,t]+ap0Eerre0[x,t];

(*pi-,只需要乘上系数*)
mp11=(-2*0.76)^2/(2*2*(0.093)^2*(2Pi)^4);
mp11Hdg[x_,t_]=mp11*mHdgf[x,t];
mp11Her[x_,t_]=mp11*mHerf[x,t];
mp11Hda[x_,t_]=mp11*mHdaf[x,t];
mp11Edg[x_,t_]=mp11*mEdgf[x,t];
mp11Eer[x_,t_]=mp11*mEerf[x,t];
mp11Eda[x_,t_]=mp11*mEdaf[x,t];
(*pi-的u贡献,ubar的反转*)
mp11Hdgre0[x_,t_]=mp11Hdg[x,t];
mp11Herre0[x_,t_]=mp11Hda[x,t]+mp11Her[x,t];
mp11Edgre0[x_,t_]=mp11Edg[x,t];
mp11Eerre0[x_,t_]=mp11Eda[x,t]+mp11Eer[x,t];
(*最后结果*)
mp11Hdgre[x_,t_]=-mp11Hdgre0[-x,t];
mp11Herre[x_,t_]=-mp11Herre0[-x,t];
mp11Edgre[x_,t_]=-mp11Edgre0[-x,t];
mp11Eerre[x_,t_]=-mp11Eerre0[-x,t];
(*图m的总结果*)
mHdgzall[x_,t_]=mp1Hdgre[x,t]+mp0Hdgre1[x,t];
mHdgfall[x_,t_]=mp0Hdgre0[x,t]+mp11Hdgre[x,t];
mHerall[x_,t_]=mp1Herre[x,t]+mp0Herre[x,t]+mp11Herre[x,t];
mEdgzall[x_,t_]=mp1Edgre[x,t]+mp0Edgre1[x,t];
mEdgfall[x_,t_]=mp0Edgre0[x,t]+mp11Edgre[x,t];
mEerall[x_,t_]=mp1Eerre[x,t]+mp0Eerre[x,t]+mp11Eerre[x,t];